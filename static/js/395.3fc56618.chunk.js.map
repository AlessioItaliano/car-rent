{"version":3,"file":"static/js/395.3fc56618.chunk.js","mappings":"oPAyEA,UA/DkB,WAChB,OAAoBA,EAAAA,EAAAA,KAAbC,GAAP,eACA,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,UAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAA0CN,EAAAA,EAAAA,UAAS,IAAnD,eAAOO,EAAP,KAAsBC,EAAtB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,MAFJ,OAETC,EAFS,OAGfR,EAAaQ,EAAKC,QAHH,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQhBL,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IAAMU,EAAc,mCAAG,wGAEbC,EAAWlB,EAAUmB,KAAI,SAAAC,GAAE,OAAIC,EAAAA,EAAAA,IAAcD,EAAlB,IAFd,SAIKE,QAAQC,IAAIL,GAJjB,OAIbM,EAJa,OAMbC,EAAcD,EAAUL,KAAI,SAAAO,GAAQ,OAAIA,EAASb,IAAb,IAE1CJ,EAAiBgB,GARE,gDAUnBV,QAAQC,IAAR,MAVmB,yBAYnBT,GAAa,GAZM,4EAAH,qDAepBU,GACD,GAAE,CAACjB,IAMJ,OACE,iCACE,SAAC,IAAD,WACE,SAAC,IAAD,MAEDM,GACC,SAAC,IAAD,KAEA,UAAC,IAAD,YACE,SAAC,IAAD,CAASqB,KAAMnB,IACdA,EAAcM,OAASV,GAAaI,EAAcM,OAAS,IAC1D,SAAC,IAAD,CAAac,WAfJ,WACjBzB,EAAQD,EAAO,EAChB,SAmBF,C","sources":["pages/Favorites.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useFavorites } from 'hooks/useFavorites';\nimport { fetchCarsById, fetchAll } from 'api/fetchcars';\n\nimport Loader from 'components/Loader';\nimport CarList from 'components/CarList';\nimport Section from 'components/Section';\nimport SearchBar from 'components/SearchBar';\nimport LoadMoreBtn from 'components/LoadMoreBtn';\n\nconst Favorites = () => {\n  const [favorites] = useFavorites();\n  const [page, setPage] = useState(1);\n  const [totalCars, setTotalCars] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [favoritesCars, setFavoritesCars] = useState([]);\n\n  useEffect(() => {\n    const getAllCars = async () => {\n      try {\n        const data = await fetchAll();\n        setTotalCars(data.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllCars();\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getFavoritCars = async () => {\n      try {\n        const promises = favorites.map(id => fetchCarsById(id));\n\n        const responses = await Promise.all(promises);\n\n        const favoriteCar = responses.map(response => response.data);\n\n        setFavoritesCars(favoriteCar);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFavoritCars();\n  }, [favorites]);\n\n  const onNextPage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <Section>\n        <SearchBar />\n      </Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Section>\n          <CarList cars={favoritesCars} />\n          {favoritesCars.length < totalCars && favoritesCars.length > 8 && (\n            <LoadMoreBtn onNextPage={onNextPage} />\n          )}\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Favorites;\n"],"names":["useFavorites","favorites","useState","page","setPage","totalCars","setTotalCars","isLoading","setIsLoading","favoritesCars","setFavoritesCars","useEffect","getAllCars","fetchAll","data","length","console","log","getFavoritCars","promises","map","id","fetchCarsById","Promise","all","responses","favoriteCar","response","cars","onNextPage"],"sourceRoot":""}