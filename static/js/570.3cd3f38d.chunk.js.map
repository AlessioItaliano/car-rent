{"version":3,"file":"static/js/570.3cd3f38d.chunk.js","mappings":"uSAIaA,EAAYC,EAAAA,GAAAA,IAAH,+FAOTC,EAASD,EAAAA,GAAAA,OAAH,sPAERE,EAAAA,EAAAA,OAAAA,UAWEA,EAAAA,EAAAA,OAAAA,gB,SCdb,EARoB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAUC,QAASD,EAAnB,SAA+B,eAGpC,EC4DD,EA1DgB,WACd,OAAwBE,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,UAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,MAFJ,OAETC,EAFS,OAGfR,EAAaQ,EAAKC,QAHH,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQhBL,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IACE,IAAMU,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAUhB,GADb,OACVW,EADU,OAEhBJ,GAAe,SAAAU,GAAS,wBAAQA,IAAR,OAAsBN,GAAtB,IAFR,2CAAH,qDAKfI,GAKD,CAJC,MAAOG,GACPL,QAAQC,IAAII,EACb,CATD,QAUEb,GAAa,EACd,CACF,GAAE,CAACL,IAMJ,OACE,iCACE,SAACmB,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,MAEDhB,GACC,SAACiB,EAAA,EAAD,KAEA,UAACF,EAAA,EAAD,YACE,SAACG,EAAA,EAAD,CAASC,KAAMjB,IACdA,EAAYM,OAASV,GAAaI,EAAYM,OAAS,IACtD,SAAC,EAAD,CAAaf,WAfJ,WACjBI,EAAQD,EAAO,EAChB,SAmBF,C","sources":["components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.jsx","pages/Catalog.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding-top: 100px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: ${variables.colors.accentBtn};\n\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration-line: underline;\n\n  border: transparent;\n  background-color: transparent;\n\n  &:focus,\n  &:hover {\n    color: ${variables.colors.accentBtnHover};\n  }\n`;\n","import * as s from './LoadMoreBtn.styled';\n\nconst LoadMoreBtn = ({ onNextPage }) => {\n  return (\n    <s.Container>\n      <s.Button onClick={onNextPage}>Load more</s.Button>\n    </s.Container>\n  );\n};\n\nexport default LoadMoreBtn;\n","import { useState, useEffect } from 'react';\n\nimport { fetchCars, fetchAll } from 'api/fetchcars';\n\nimport Loader from 'components/Loader';\nimport CarList from 'components/CarList';\nimport Section from 'components/Section';\nimport SearchBar from 'components/SearchBar';\nimport LoadMoreBtn from 'components/LoadMoreBtn';\n\nconst Catalog = () => {\n  const [page, setPage] = useState(1);\n  const [totalCars, setTotalCars] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCars, setCurrentCars] = useState([]);\n\n  useEffect(() => {\n    const getAllCars = async () => {\n      try {\n        const data = await fetchAll();\n        setTotalCars(data.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllCars();\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    try {\n      const fetchData = async () => {\n        const data = await fetchCars(page);\n        setCurrentCars(prevState => [...prevState, ...data]);\n        // setCurrentCars([...currentCars, ...data]);\n      };\n      fetchData();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [page]);\n\n  const onNextPage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <Section>\n        <SearchBar />\n      </Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Section>\n          <CarList cars={currentCars} />\n          {currentCars.length < totalCars && currentCars.length > 0 && (\n            <LoadMoreBtn onNextPage={onNextPage} />\n          )}\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["Container","styled","Button","variables","onNextPage","onClick","useState","page","setPage","totalCars","setTotalCars","isLoading","setIsLoading","currentCars","setCurrentCars","useEffect","getAllCars","fetchAll","data","length","console","log","fetchData","fetchCars","prevState","error","Section","SearchBar","Loader","CarList","cars"],"sourceRoot":""}