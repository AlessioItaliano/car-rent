{"version":3,"file":"static/js/875.f19f6fec.chunk.js","mappings":"oPAoEA,UA1DgB,WACd,OAAwBA,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,UAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAsCN,EAAAA,EAAAA,UAAS,IAA/C,eAAOO,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,8GAEIC,EAAAA,EAAAA,MAFJ,OAETC,EAFS,OAGfR,EAAaQ,EAAKC,QAHH,gDAKfC,QAAQC,IAAR,MALe,yDAAH,qDAQhBL,GACD,GAAE,KAEHD,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IACE,IAAMU,EAAS,mCAAG,qGACGC,EAAAA,EAAAA,IAAUhB,GADb,OACVW,EADU,OAEhBJ,GAAe,SAAAU,GAAS,wBAAQA,IAAR,OAAsBN,GAAtB,IAFR,2CAAH,qDAKfI,GAKD,CAJC,MAAOG,GACPL,QAAQC,IAAII,EACb,CATD,QAUEb,GAAa,EACd,CACF,GAAE,CAACL,IAMJ,OACE,iCACE,SAAC,IAAD,WACE,SAAC,IAAD,MAEDI,GACC,SAAC,IAAD,KAEA,UAAC,IAAD,YACE,SAAC,IAAD,CAASe,KAAMb,IACdA,EAAYM,OAASV,GAAaI,EAAYM,OAAS,IACtD,SAAC,IAAD,CAAaQ,WAfJ,WACjBnB,EAAQD,EAAO,EAChB,SAmBF,C","sources":["pages/Catalog.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { fetchCars, fetchAll } from 'api/fetchcars';\n\nimport Loader from 'components/Loader';\nimport CarList from 'components/CarList';\nimport Section from 'components/Section';\nimport SearchBar from 'components/SearchBar';\nimport LoadMoreBtn from 'components/LoadMoreBtn';\n\nconst Catalog = () => {\n  const [page, setPage] = useState(1);\n  const [totalCars, setTotalCars] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentCars, setCurrentCars] = useState([]);\n\n  useEffect(() => {\n    const getAllCars = async () => {\n      try {\n        const data = await fetchAll();\n        setTotalCars(data.length);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getAllCars();\n  }, []);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    try {\n      const fetchData = async () => {\n        const data = await fetchCars(page);\n        setCurrentCars(prevState => [...prevState, ...data]);\n        // setCurrentCars([...currentCars, ...data]);\n      };\n      fetchData();\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [page]);\n\n  const onNextPage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <Section>\n        <SearchBar />\n      </Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Section>\n          <CarList cars={currentCars} />\n          {currentCars.length < totalCars && currentCars.length > 0 && (\n            <LoadMoreBtn onNextPage={onNextPage} />\n          )}\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["useState","page","setPage","totalCars","setTotalCars","isLoading","setIsLoading","currentCars","setCurrentCars","useEffect","getAllCars","fetchAll","data","length","console","log","fetchData","fetchCars","prevState","error","cars","onNextPage"],"sourceRoot":""}