{"version":3,"file":"static/js/818.01c9d658.chunk.js","mappings":"qMAAaA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,KAAf,EAClBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,KAAKG,SAAf,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,KAAKK,KAAf,E,qECEnBC,EAAYC,EAAAA,GAAAA,IAAH,+FAOTC,EAASD,EAAAA,GAAAA,OAAH,sPAERE,EAAAA,EAAAA,OAAAA,UAWEA,EAAAA,EAAAA,OAAAA,gB,SCdb,EARoB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAUC,QAASD,EAAnB,SAA+B,eAGpC,ECyED,EAjEgB,WACd,IAAME,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,IAAYjB,GAC1BO,GAAQU,EAAAA,EAAAA,IAAYX,GACpBD,GAAYY,EAAAA,EAAAA,IAAYb,GAE9B,GAAwBc,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,MAiBAC,EAAAA,EAAAA,YAAU,WACRP,GAASQ,EAAAA,EAAAA,KACV,GAAE,CAACR,IAsBJ,OACE,iCACE,SAACS,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,MAEDnB,IAAcE,GACb,SAACkB,EAAA,EAAD,KAEA,UAACF,EAAA,EAAD,YACE,SAACG,EAAA,EAAD,CAASxB,KAAMc,IACdA,EAAYW,OAAS,IAAK,SAAC,EAAD,CAAaf,WAd7B,WACjBQ,EAAQD,EAAO,EAChB,SAiBF,C","sources":["redux/selectors.js","components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.jsx","pages/Catalog.jsx"],"sourcesContent":["export const selectCars = state => state.cars.items;\nexport const selectIsLoading = state => state.cars.isLoading;\nexport const selectError = state => state.cars.error;\n","import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding-top: 100px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: ${variables.colors.accentBtn};\n\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration-line: underline;\n\n  border: transparent;\n  background-color: transparent;\n\n  &:focus,\n  &:hover {\n    color: ${variables.colors.accentBtnHover};\n  }\n`;\n","import * as s from './LoadMoreBtn.styled';\n\nconst LoadMoreBtn = ({ onNextPage }) => {\n  return (\n    <s.Container>\n      <s.Button onClick={onNextPage}>Load more</s.Button>\n    </s.Container>\n  );\n};\n\nexport default LoadMoreBtn;\n","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// import { fetchCars, fetchAll } from 'api/fetchcars';\n\n// import { useSelector, useDispatch } from 'react-redux';\nimport { getAll } from '../redux/operations';\n\nimport { selectCars, selectError, selectIsLoading } from '../redux/selectors';\n\nimport Loader from 'components/Loader';\nimport CarList from 'components/CarList';\nimport Section from 'components/Section';\nimport SearchBar from 'components/SearchBar';\nimport LoadMoreBtn from 'components/LoadMoreBtn';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n\n  const currentCars = useSelector(selectCars);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const [page, setPage] = useState(1);\n  // const [totalCars, setTotalCars] = useState(0);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [currentCars, setCurrentCars] = useState([]);\n\n  // useEffect(() => {\n  //   const getAllCars = async () => {\n  //     try {\n  //       const data = await fetchAll();\n  //       setTotalCars(data.length);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   getAllCars();\n  // }, []);\n\n  useEffect(() => {\n    dispatch(getAll());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   setIsLoading(true);\n\n  //   try {\n  //     const fetchData = async () => {\n  //       const data = await fetchCars(page);\n  //       setCurrentCars(prevState => [...prevState, ...data]);\n  //     };\n  //     fetchData();\n  //   } catch (error) {\n  //     console.log(error);\n  //   } finally {\n  //     setIsLoading(false);\n  //   }\n  // }, [page]);\n\n  const onNextPage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <Section>\n        <SearchBar />\n      </Section>\n      {isLoading && !error ? (\n        <Loader />\n      ) : (\n        <Section>\n          <CarList cars={currentCars} />\n          {currentCars.length < 0 && <LoadMoreBtn onNextPage={onNextPage} />}\n        </Section>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["selectCars","state","cars","items","selectIsLoading","isLoading","selectError","error","Container","styled","Button","variables","onNextPage","onClick","dispatch","useDispatch","currentCars","useSelector","useState","page","setPage","useEffect","getAll","Section","SearchBar","Loader","CarList","length"],"sourceRoot":""}