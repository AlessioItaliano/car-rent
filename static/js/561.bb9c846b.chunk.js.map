{"version":3,"file":"static/js/561.bb9c846b.chunk.js","mappings":"yOAoBO,SAAeA,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,uFACcC,EAAAA,EAAAA,IAAA,mBAAsBD,IADpC,cACCE,EADD,yBAGEA,EAAKC,MAHP,kEAlBPF,EAAAA,EAAAA,SAAAA,QAAA,8C,6GCIaG,EAAUC,EAAAA,GAAAA,IAAH,yHAOPC,EAAQD,EAAAA,GAAAA,GAAH,4GAMPE,EAAAA,EAAAA,OAAAA,OAGEC,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,6E,mBCHvB,EAdkB,WAChB,OACE,UAAC,EAAD,YACE,SAAC,EAAD,UAAS,mEAGT,SAAC,EAAD,CAAcK,GAAG,WAAjB,UACE,SAACC,EAAA,EAAD,UAAQ,iBAEV,SAAC,MAAD,CAAaC,KAAK,YAGvB,E,UC+CD,EAnDkB,WAChB,OAAoBC,EAAAA,EAAAA,KAAbC,GAAP,eACA,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAwBA,OAtBAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GAEb,IAAMI,EAAc,mCAAG,qGAEbC,EAAkB,GAFL,UAIFR,GAJE,gEAIRd,EAJQ,iBAKMD,EAAcC,GALpB,OAKXuB,EALW,OAMjBD,EAAgBE,KAAKD,GANJ,+IASnBJ,EAAiBG,GATE,kDAWnBG,QAAQC,IAAR,MAXmB,yBAanBT,GAAa,GAbM,0FAAH,qDAgBpBI,GACD,GAAE,CAACP,KAGF,iCACE,SAACa,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,MAEDb,GACC,SAACc,EAAA,EAAD,KAEA,8BACIhB,EAAUiB,QAGV,SAACH,EAAA,EAAD,WACE,SAACI,EAAA,EAAD,CAAS9B,KAAMgB,OAHjB,SAAC,EAAD,OAQN,SAACe,EAAA,EAAD,MAGL,C","sources":["api/fetchcars.js","components/EmptyPage/EmptyPage.styled.js","components/EmptyPage/EmptyPage.jsx","pages/Favorites.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = `https://64c2ad55eb7fd5d6ebd0337b.mockapi.io`;\n\nexport async function fetchAll() {\n  const cars = await axios.get('/adverts');\n\n  return cars.data;\n}\n\nexport async function fetchCars(page) {\n  const searchParams = new URLSearchParams({\n    limit: 8,\n    page,\n  });\n  const cars = await axios.get(`/adverts/?${searchParams}`);\n\n  return cars.data;\n}\n\nexport async function fetchCarsById(id) {\n  const cars = await axios.get(`/adverts/${id}`);\n\n  return cars.data;\n}\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Warning = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 100px;\n\n  font-size: 36px;\n  font-weight: 500;\n\n  color: ${variables.colors.black};\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n\n  margin-bottom: 100px;\n`;\n","import { GiPoliceCar } from 'react-icons/gi';\nimport * as s from './EmptyPage.styled';\n\nimport Button from 'components/Button';\n\nconst EmptyPage = () => {\n  return (\n    <s.Warning>\n      <s.Title>\n        Oops, you haven't selected any cars yet! Hurry up and choose!\n      </s.Title>\n      <s.StyledLink to=\"/catalog\">\n        <Button> Catalog </Button>\n      </s.StyledLink>\n      <GiPoliceCar size=\"300px\" />\n    </s.Warning>\n  );\n};\n\nexport default EmptyPage;\n","import { useState, useEffect } from 'react';\n\nimport { useFavorites } from 'hooks/useFavorites';\nimport { fetchCarsById } from 'api/fetchcars';\n\nimport Footer from 'components/Footer';\nimport Loader from 'components/Loader';\nimport CarList from 'components/CarList';\nimport Section from 'components/Section';\nimport SearchBar from 'components/SearchBar';\nimport EmptyPage from 'components/EmptyPage';\nimport Header from 'components/Header';\n\nconst Favorites = () => {\n  const [favorites] = useFavorites();\n  const [isLoading, setIsLoading] = useState(false);\n  const [favoritesCars, setFavoritesCars] = useState([]);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const getFavoritCars = async () => {\n      try {\n        const favoriteCarData = [];\n\n        for (const id of favorites) {\n          const response = await fetchCarsById(id);\n          favoriteCarData.push(response);\n        }\n\n        setFavoritesCars(favoriteCarData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getFavoritCars();\n  }, [favorites]);\n\n  return (\n    <>\n      <Header />\n      <Section>\n        <SearchBar />\n      </Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          {!favorites.length ? (\n            <EmptyPage />\n          ) : (\n            <Section>\n              <CarList cars={favoritesCars} />\n            </Section>\n          )}\n        </>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Favorites;\n"],"names":["fetchCarsById","id","axios","cars","data","Warning","styled","Title","variables","StyledLink","NavLink","to","Button","size","useFavorites","favorites","useState","isLoading","setIsLoading","favoritesCars","setFavoritesCars","useEffect","getFavoritCars","favoriteCarData","response","push","console","log","Header","Section","SearchBar","Loader","length","CarList","Footer"],"sourceRoot":""}