{"version":3,"file":"static/js/934.52af669b.chunk.js","mappings":"mOAAaA,EAAa,SAAAC,GAAK,OAAIA,EAAMC,KAAKA,IAAf,EAClBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMC,KAAKE,SAAf,E,yFCGvBC,EAAYC,EAAAA,GAAAA,IAAH,+FAOTC,EAASD,EAAAA,GAAAA,OAAH,sPAERE,EAAAA,EAAAA,OAAAA,UAWEA,EAAAA,EAAAA,OAAAA,gB,SCdb,EARoB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAUC,QAASD,EAAnB,SAA+B,eAGpC,EC8GD,EAhGgB,WACd,IAAMP,GAAOS,EAAAA,EAAAA,IAAYX,GAEnBI,GAAYO,EAAAA,EAAAA,IAAYR,GAExBS,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOG,EAAP,KAAmBC,EAAnB,MAKAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAG,oGACUR,GAASS,EAAAA,EAAAA,GAAcN,IADjC,kBACRO,QAEIC,QAAU,EACpBL,GAAc,GAEdA,GAAc,GANA,2CAAH,qDAuBfE,GACD,GAAE,CAACR,EAAUG,IAsCd,OACE,iCACE,SAACS,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,WACE,SAACC,EAAA,EAAD,MAEDtB,GACC,SAACuB,EAAA,EAAD,KAEA,UAACF,EAAA,EAAD,YACE,SAACG,EAAA,EAAD,CAAS1B,KAAMA,IAEde,IAAc,SAAC,EAAD,CAAaR,WAhBjB,WACjBO,EAAQD,EAAO,EAChB,QAiBG,SAACc,EAAA,EAAD,MAGL,C","sources":["redux/cars/carsSelectors.js","components/LoadMoreBtn/LoadMoreBtn.styled.js","components/LoadMoreBtn/LoadMoreBtn.jsx","pages/Catalog.jsx"],"sourcesContent":["export const selectCars = state => state.cars.cars;\nexport const selectIsLoading = state => state.cars.isLoading;\nexport const selectError = state => state.cars.error;\n","import styled from 'styled-components';\n\nimport { variables } from '../../stylesheet/variables';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n\n  padding-top: 100px;\n`;\n\nexport const Button = styled.button`\n  cursor: pointer;\n  color: ${variables.colors.accentBtn};\n\n  font-size: 16px;\n  font-weight: 500;\n  text-decoration-line: underline;\n\n  border: transparent;\n  background-color: transparent;\n\n  &:focus,\n  &:hover {\n    color: ${variables.colors.accentBtnHover};\n  }\n`;\n","import * as s from './LoadMoreBtn.styled';\n\nconst LoadMoreBtn = ({ onNextPage }) => {\n  return (\n    <s.Container>\n      <s.Button onClick={onNextPage}>Load more</s.Button>\n    </s.Container>\n  );\n};\n\nexport default LoadMoreBtn;\n","import { useState, useEffect } from 'react';\n\n// import { fetchCars, fetchAll } from 'api/fetchcars';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  // getFirstCarsPage,\n  getRestOfCars,\n} from '../redux/cars/carsOperations';\nimport {\n  selectCars,\n  // selectError,\n  selectIsLoading,\n} from 'redux/cars/carsSelectors';\n\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\nimport Loader from 'components/Loader';\nimport CarList from 'components/CarList';\nimport Section from 'components/Section';\nimport SearchBar from 'components/SearchBar';\nimport LoadMoreBtn from 'components/LoadMoreBtn';\n\nconst Catalog = () => {\n  const cars = useSelector(selectCars);\n  // const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n  const [page, setPage] = useState(1);\n  const [showButton, setShowButton] = useState(false);\n  // const [totalCars, setTotalCars] = useState(0);\n  // const [isLoading, setIsLoading] = useState(false);\n  // const [currentCars, setCurrentCars] = useState([]);\n\n  useEffect(() => {\n    // const fetchData = async () => {\n    const fetchData = async () => {\n      const { payload } = await dispatch(getRestOfCars(page));\n      // setCurrentCars(prevState => [...prevState, ...payload]);\n      if (payload.length >= 8) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n      //   if (page === 1) {\n      //     dispatch(getRestOfCars(page));\n      //     setShowButton(true);\n      //   }\n\n      //   if (page > 1) {\n      //     const response = await dispatch(getRestOfCars(page));\n      //     if (response.payload.length >= 8) {\n      //       setShowButton(true);\n      //     } else {\n      //       setShowButton(false);\n      //     }\n      //   }\n    };\n\n    fetchData();\n  }, [dispatch, page]);\n\n  // useEffect(() => {\n  //   if (page > 1) dispatch(getRestOfCars(page));\n  // }, [page, dispatch]);\n\n  // useEffect(() => {\n  //   const getAllCars = async () => {\n  //     try {\n  //       const data = await fetchAll();\n  //       setTotalCars(data.length);\n  //     } catch (error) {\n  //       console.log(error);\n  //     }\n  //   };\n  //   getAllCars();\n  // }, []);\n\n  // useEffect(() => {\n  //   setIsLoading(true);\n\n  //   try {\n  //     const fetchData = async () => {\n  //       const data = await fetchCars(page);\n  //       setCurrentCars(prevState => [...prevState, ...data]);\n  //     };\n  //     fetchData();\n  //   } catch (error) {\n  //     console.log(error);\n  //   } finally {\n  //     setIsLoading(false);\n  //   }\n  // }, [page]);\n\n  const onNextPage = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <Header />\n      <Section>\n        <SearchBar />\n      </Section>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <Section>\n          <CarList cars={cars} />\n          {/* {cars.length > 0  && <LoadMoreBtn onNextPage={onNextPage} />} */}\n          {showButton && <LoadMoreBtn onNextPage={onNextPage} />}\n        </Section>\n      )}\n      <Footer />\n    </>\n  );\n};\n\nexport default Catalog;\n"],"names":["selectCars","state","cars","selectIsLoading","isLoading","Container","styled","Button","variables","onNextPage","onClick","useSelector","dispatch","useDispatch","useState","page","setPage","showButton","setShowButton","useEffect","fetchData","getRestOfCars","payload","length","Header","Section","SearchBar","Loader","CarList","Footer"],"sourceRoot":""}